{"version":3,"sources":["propTypes.js","DataTable.js","regex.js","utils.js","App.js","index.js"],"names":["PropTypes","array","shortid","require","Table","styled","table","TableCell","td","TableCellWithError","TableHeader","th","DataTable","memo","data","headers","map","head","generate","dataRow","Object","entries","dataKey","value","Fragment","test","ID","defaultProps","patternFileExtension","patternLinesSeparator","patternRowSeparator","patternFullName","patternPhone","HEADERS","Input","input","Label","label","App","useState","setHeaders","setData","fileError","setFileError","ageValidation","age","length","Number","experienceValidation","experience","incomeValidation","income","hasChildrenValidation","hasChildren","some","processData","lines","split","every","header","index","preparedHeader","trim","RegExp","headersValidation","phone","fullName","rows","i","row","String","item","rowsData","j","cellValue","substring","cellError","slice","toFixed","values","filter","x","push","console","log","href","target","rel","htmlFor","id","type","accept","onChange","e","files","file","name","reader","FileReader","onload","evt","result","readAsBinaryString","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.434ad660.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport const propTypes = {\r\n    headers: PropTypes.array,\r\n    data: PropTypes.array,\r\n}\r\n\r\nexport const defaultProps = {\r\n    headers: [],\r\n    data: [],\r\n}","import React, { memo } from 'react';\r\nimport { propTypes, defaultProps } from './propTypes';\r\nimport styled from 'styled-components';\r\nconst shortid = require('shortid');\r\n\r\nconst Table = styled.table`\r\n  font-family: Arial, Helvetica, sans-serif;\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`;\r\n\r\nconst TableCell = styled.td`\r\n  border: 1px solid #ddd;\r\n  padding: 8px;\r\n`;\r\n\r\nconst TableCellWithError = styled.td`\r\n  background: #f68888;\r\n`;\r\n\r\nconst TableHeader = styled.th`\r\n  border: 1px solid #ddd;\r\n  padding: 12px 8px;\r\n  text-align: left;\r\n  background-color: #4CAF50;\r\n  color: white;\r\n`;\r\n\r\nconst DataTable = memo(({ data, headers }) => {\r\n    return (\r\n        <Table>\r\n            <thead>\r\n                <tr>\r\n                    {headers.map(head => (\r\n                        <TableHeader key={shortid.generate()}>\r\n                            {head}\r\n                        </TableHeader>\r\n                    ))}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {data.map( dataRow => (\r\n                    <tr key={dataRow.ID}>\r\n                        {Object.entries(dataRow).map(([dataKey,value]) =>\r\n                            <React.Fragment key={shortid.generate()}>\r\n                                {/error/g.test(dataKey) ?\r\n                                    (\r\n                                        <TableCellWithError>\r\n                                            {value}\r\n                                        </TableCellWithError>\r\n                                    ) : (\r\n                                        <TableCell>\r\n                                            {value}\r\n                                        </TableCell>\r\n                                    )\r\n                                }\r\n                            </React.Fragment>\r\n                        )}\r\n                    </tr>\r\n                ))}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n});\r\n\r\nDataTable.propTypes = propTypes;\r\nDataTable.defaultProps = defaultProps;\r\n\r\nexport default DataTable;","export const patternFileExtension = /\\.csv+$/i;\r\nexport const patternLinesSeparator = /\\r\\n|\\n/;\r\nexport const patternRowSeparator = /,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/;\r\nexport const patternFullName = /^[a-zA-Z]{4,}(?: [a-zA-Z]+){0,2}$/;\r\nexport const patternPhone = /^(?:\\+1|1)?[0-9]{10}$/;","export const HEADERS = [\r\n    \"Full Name\",\r\n    \"Phone\",\r\n    \"Email\",\r\n    \"Age\",\r\n    \"Experience\",\r\n    \"Yearly Income\",\r\n    \"Has children\",\r\n    \"License states\",\r\n    \"Expiration date\",\r\n    \"License number\"\r\n]","import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport DataTable from './DataTable';\n\nimport {\n  patternFileExtension,\n  patternLinesSeparator,\n  patternRowSeparator,\n  patternFullName,\n  patternPhone,\n} from \"./regex\";\nimport { HEADERS } from \"./utils\";\n\nconst Input = styled.input`\n  width: 0.1px;\n  height: 0.1px;\n  opacity: 0;\n  overflow: hidden;\n  position: absolute;\n  z-index: -1;\n`;\n\nconst Label = styled.label`\n  width: 180px;\n  height: 50px;\n  border-radius: 4px;\n  text-align: center;\n  cursor: pointer;\n  display: block;\n  font: 14px/50px Tahoma;\n  transition: all 0.18s ease-in-out;\n  border: 1px solid #333;\n  color: #333;\n  background: #eeee4a;\n  margin: 50px 0 20px;\n\n  &:hover {\n    color: white;\n    background: #333;\n  }\n`;\n\nfunction App() {\n  const [headers, setHeaders] = useState([]);\n  const [data, setData] = useState([]);\n  const [fileError, setFileError] = useState(false);\n\n\n  const headersValidation = headers => {\n    if (headers.length !== HEADERS.length) {\n      return false;\n    }\n\n    return headers\n        .every((header, index) => {\n          const preparedHeader = header.trim();\n          const patternHeader = new RegExp(preparedHeader, \"i\");\n\n          return patternHeader.test(HEADERS[index]);\n        })\n  };\n\n  const fullNameValidation = fullName => patternFullName.test(fullName);\n\n  const phoneValidation = phone => patternPhone.test(phone);\n\n  const ageValidation = (age = 21) =>\n      age.length === 2 && Number(age) && Number(age) >= 21;\n\n  const experienceValidation = (experience = 0, age = 21) =>\n      experience.length === 2\n      && Number(experience)\n      && Number(experience) >= 0\n      && Number(age ? age : 21) - Number(experience) >= 18;\n\n  const incomeValidation = (income = 0) =>\n      income.length <= 12\n      && Number(income)\n      && Number(income) >= 0\n      && Number(income) <= 1000000;\n\n  const hasChildrenValidation = (hasChildren) =>\n      ['TRUE', 'FALSE'].some( value => value === hasChildren);\n\n\n  const processData = data => {\n    setFileError(false);\n\n    const lines = data.split(patternLinesSeparator);\n    let headers = lines[0].split(patternRowSeparator);\n\n    if (!headersValidation(headers)) {\n      setFileError(true);\n      return;\n    }\n\n    headers = [\n      \"ID\",\n      ...HEADERS,\n      \"Duplicate\",\n    ];\n\n    const rows = [];\n    for (let i = 1; i < lines.length; i++) {\n      const row = [\n        String(i),\n        ...lines[i]\n            .split(patternRowSeparator)\n            .map(item => item.trim()),\n        '',\n      ];\n\n      const requiredFieldsAreFilled = row[1] && row[2] && row[3];\n      if (!requiredFieldsAreFilled){\n        setFileError(true);\n        return;\n      }\n\n      const rowsData = {};\n      for (let j = 0; j < headers.length; j++) {\n        let cellValue = row[j];\n\n        if (cellValue.length > 0) {\n          if (cellValue[0] === '\"') cellValue = cellValue.substring(1, cellValue.length - 1);\n          if (cellValue[cellValue.length - 1] === '\"') cellValue = cellValue.substring(cellValue.length - 2, 1);\n        }\n\n        let cellError = false;\n\n        switch (headers[j]) {\n          case 'Full Name':\n            cellError = !fullNameValidation(cellValue);\n            break;\n          case 'Phone':\n            cellError = !phoneValidation(cellValue);\n            cellValue = cellError ?\n                cellValue : `+1${cellValue.slice(-10)}`;\n            break;\n          case 'Email':\n            break;\n          case 'Age':\n            cellError = !ageValidation(cellValue);\n            cellValue = cellError ?\n                cellValue : Number(cellValue);\n            break;\n          case 'Experience':\n            cellError = !experienceValidation(cellValue, Number(row[j-1]));\n            cellValue = cellError ?\n                cellValue : Number(cellValue);\n            break;\n          case 'Yearly Income':\n            cellError = !incomeValidation(cellValue);\n            cellValue = cellError ?\n                cellValue : Number(cellValue).toFixed(2);\n            break;\n          case 'Has children':\n            cellValue = cellValue ? cellValue : 'FALSE';\n            cellError = !hasChildrenValidation(cellValue);\n            break;\n          case 'License states':\n            break;\n          case 'Expiration date':\n            break;\n          case 'License number':\n            break;\n          default:\n            break;\n        }\n\n        const errorPrefix = cellError ? 'error' : '';\n        rowsData[errorPrefix + headers[j]] = cellValue;\n      }\n\n      // remove the blank rows\n      if (Object.values(rowsData).filter(x => x).length > 0) {\n        rows.push(rowsData);\n      }\n    }\n    console.log(rows)\n    setData(rows);\n    setHeaders(headers);\n  }\n\n  const handleFileUpload = e => {\n    if (!e.target.files[0]) return;\n\n    const file = e.target.files[0];\n\n    if (!patternFileExtension.test(file.name)){\n      setFileError(true);\n      return;\n    }\n\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      const result = evt.target.result;\n      processData(result);\n    };\n    reader.readAsBinaryString(file);\n  }\n\n  return (\n      <div>\n        <h3>Applicant - <a href=\"https://www.linkedin.com/in/khrystyna-yelyseyeva-378b2319a/\" target=\"_blank\" rel=\"noopener noreferrer\">Khrystyna Yelyseyeva (Linkedin)</a></h3>\n\n        <Label htmlFor=\"file\">\n          Виберіть файл\n          <Input\n              id=\"file\"\n              type=\"file\"\n              accept=\".csv\"\n              onChange={handleFileUpload}\n          />\n        </Label>\n\n        { fileError ?\n            <p>Error</p> :\n            <DataTable\n                headers={headers}\n                data={data}\n            />\n        }\n      </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}